//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OceanbnbDbEntities : DbContext
    {
        public OceanbnbDbEntities()
            : base("name=OceanbnbDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Cruis> Cruises { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<LocationsToCruis> LocationsToCruises { get; set; }
        public virtual DbSet<Ship> Ships { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UsersToCruis> UsersToCruises { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> Cruises_Delete(Nullable<int> cruiseId)
        {
            var cruiseIdParameter = cruiseId.HasValue ?
                new ObjectParameter("CruiseId", cruiseId) :
                new ObjectParameter("CruiseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Cruises_Delete", cruiseIdParameter);
        }
    
        public virtual ObjectResult<Cruises_GetAllCruises_Result> Cruises_GetAllCruises()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cruises_GetAllCruises_Result>("Cruises_GetAllCruises");
        }
    
        public virtual ObjectResult<Cruises_GetById_Result> Cruises_GetById(Nullable<int> cruiseId)
        {
            var cruiseIdParameter = cruiseId.HasValue ?
                new ObjectParameter("CruiseId", cruiseId) :
                new ObjectParameter("CruiseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cruises_GetById_Result>("Cruises_GetById", cruiseIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Cruises_Insert(string cruiseName, Nullable<int> shipId)
        {
            var cruiseNameParameter = cruiseName != null ?
                new ObjectParameter("CruiseName", cruiseName) :
                new ObjectParameter("CruiseName", typeof(string));
    
            var shipIdParameter = shipId.HasValue ?
                new ObjectParameter("ShipId", shipId) :
                new ObjectParameter("ShipId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Cruises_Insert", cruiseNameParameter, shipIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Cruises_Update(Nullable<int> cruiseId, string cruiseName, Nullable<int> shipId)
        {
            var cruiseIdParameter = cruiseId.HasValue ?
                new ObjectParameter("CruiseId", cruiseId) :
                new ObjectParameter("CruiseId", typeof(int));
    
            var cruiseNameParameter = cruiseName != null ?
                new ObjectParameter("CruiseName", cruiseName) :
                new ObjectParameter("CruiseName", typeof(string));
    
            var shipIdParameter = shipId.HasValue ?
                new ObjectParameter("ShipId", shipId) :
                new ObjectParameter("ShipId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Cruises_Update", cruiseIdParameter, cruiseNameParameter, shipIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Locations_Delete(Nullable<int> locationId)
        {
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Locations_Delete", locationIdParameter);
        }
    
        public virtual ObjectResult<Locations_GetById_Result> Locations_GetById(Nullable<int> locationId)
        {
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Locations_GetById_Result>("Locations_GetById", locationIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Locations_Insert(string locationName, Nullable<double> lat, Nullable<double> @long)
        {
            var locationNameParameter = locationName != null ?
                new ObjectParameter("LocationName", locationName) :
                new ObjectParameter("LocationName", typeof(string));
    
            var latParameter = lat.HasValue ?
                new ObjectParameter("Lat", lat) :
                new ObjectParameter("Lat", typeof(double));
    
            var longParameter = @long.HasValue ?
                new ObjectParameter("Long", @long) :
                new ObjectParameter("Long", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Locations_Insert", locationNameParameter, latParameter, longParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Locations_Update(Nullable<int> locationId, string locationName, Nullable<double> lat, Nullable<double> @long)
        {
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            var locationNameParameter = locationName != null ?
                new ObjectParameter("LocationName", locationName) :
                new ObjectParameter("LocationName", typeof(string));
    
            var latParameter = lat.HasValue ?
                new ObjectParameter("Lat", lat) :
                new ObjectParameter("Lat", typeof(double));
    
            var longParameter = @long.HasValue ?
                new ObjectParameter("Long", @long) :
                new ObjectParameter("Long", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Locations_Update", locationIdParameter, locationNameParameter, latParameter, longParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> LocationsToCruises_Delete(Nullable<int> locationToCruiseId)
        {
            var locationToCruiseIdParameter = locationToCruiseId.HasValue ?
                new ObjectParameter("LocationToCruiseId", locationToCruiseId) :
                new ObjectParameter("LocationToCruiseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("LocationsToCruises_Delete", locationToCruiseIdParameter);
        }
    
        public virtual ObjectResult<LocationsToCruises_GetById_Result> LocationsToCruises_GetById(Nullable<int> locationsToCruisesId)
        {
            var locationsToCruisesIdParameter = locationsToCruisesId.HasValue ?
                new ObjectParameter("LocationsToCruisesId", locationsToCruisesId) :
                new ObjectParameter("LocationsToCruisesId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LocationsToCruises_GetById_Result>("LocationsToCruises_GetById", locationsToCruisesIdParameter);
        }
    
        public virtual ObjectResult<LocationsToCruises_GetCruiseLocations_Result> LocationsToCruises_GetCruiseLocations(Nullable<int> cruiseId)
        {
            var cruiseIdParameter = cruiseId.HasValue ?
                new ObjectParameter("CruiseId", cruiseId) :
                new ObjectParameter("CruiseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LocationsToCruises_GetCruiseLocations_Result>("LocationsToCruises_GetCruiseLocations", cruiseIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> LocationsToCruises_InsertUpdate(Nullable<int> locationsToCruisesId, Nullable<int> locationId, Nullable<int> cruiseId, Nullable<bool> isDeleted)
        {
            var locationsToCruisesIdParameter = locationsToCruisesId.HasValue ?
                new ObjectParameter("LocationsToCruisesId", locationsToCruisesId) :
                new ObjectParameter("LocationsToCruisesId", typeof(int));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            var cruiseIdParameter = cruiseId.HasValue ?
                new ObjectParameter("CruiseId", cruiseId) :
                new ObjectParameter("CruiseId", typeof(int));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("LocationsToCruises_InsertUpdate", locationsToCruisesIdParameter, locationIdParameter, cruiseIdParameter, isDeletedParameter);
        }
    
        public virtual int Ships_Delete(Nullable<int> shipId)
        {
            var shipIdParameter = shipId.HasValue ?
                new ObjectParameter("ShipId", shipId) :
                new ObjectParameter("ShipId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ships_Delete", shipIdParameter);
        }
    
        public virtual ObjectResult<Ships_GetAllShips_Result> Ships_GetAllShips()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ships_GetAllShips_Result>("Ships_GetAllShips");
        }
    
        public virtual ObjectResult<Ships_GetById_Result> Ships_GetById(Nullable<int> shipId)
        {
            var shipIdParameter = shipId.HasValue ?
                new ObjectParameter("ShipId", shipId) :
                new ObjectParameter("ShipId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ships_GetById_Result>("Ships_GetById", shipIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Ships_Insert(string shipName, Nullable<int> yearBuilt, Nullable<int> passengerCapactiy, Nullable<int> crewCount, Nullable<int> weightInTons, Nullable<int> lengthInMeters, Nullable<int> beamInMeters)
        {
            var shipNameParameter = shipName != null ?
                new ObjectParameter("ShipName", shipName) :
                new ObjectParameter("ShipName", typeof(string));
    
            var yearBuiltParameter = yearBuilt.HasValue ?
                new ObjectParameter("YearBuilt", yearBuilt) :
                new ObjectParameter("YearBuilt", typeof(int));
    
            var passengerCapactiyParameter = passengerCapactiy.HasValue ?
                new ObjectParameter("PassengerCapactiy", passengerCapactiy) :
                new ObjectParameter("PassengerCapactiy", typeof(int));
    
            var crewCountParameter = crewCount.HasValue ?
                new ObjectParameter("CrewCount", crewCount) :
                new ObjectParameter("CrewCount", typeof(int));
    
            var weightInTonsParameter = weightInTons.HasValue ?
                new ObjectParameter("WeightInTons", weightInTons) :
                new ObjectParameter("WeightInTons", typeof(int));
    
            var lengthInMetersParameter = lengthInMeters.HasValue ?
                new ObjectParameter("LengthInMeters", lengthInMeters) :
                new ObjectParameter("LengthInMeters", typeof(int));
    
            var beamInMetersParameter = beamInMeters.HasValue ?
                new ObjectParameter("BeamInMeters", beamInMeters) :
                new ObjectParameter("BeamInMeters", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Ships_Insert", shipNameParameter, yearBuiltParameter, passengerCapactiyParameter, crewCountParameter, weightInTonsParameter, lengthInMetersParameter, beamInMetersParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Ships_Update(Nullable<int> shipId, string shipName, Nullable<int> yearBuilt, Nullable<int> passengerCapactiy, Nullable<int> crewCount, Nullable<int> weightInTons, Nullable<int> lengthInMeters, Nullable<int> beamInMeters)
        {
            var shipIdParameter = shipId.HasValue ?
                new ObjectParameter("ShipId", shipId) :
                new ObjectParameter("ShipId", typeof(int));
    
            var shipNameParameter = shipName != null ?
                new ObjectParameter("ShipName", shipName) :
                new ObjectParameter("ShipName", typeof(string));
    
            var yearBuiltParameter = yearBuilt.HasValue ?
                new ObjectParameter("YearBuilt", yearBuilt) :
                new ObjectParameter("YearBuilt", typeof(int));
    
            var passengerCapactiyParameter = passengerCapactiy.HasValue ?
                new ObjectParameter("PassengerCapactiy", passengerCapactiy) :
                new ObjectParameter("PassengerCapactiy", typeof(int));
    
            var crewCountParameter = crewCount.HasValue ?
                new ObjectParameter("CrewCount", crewCount) :
                new ObjectParameter("CrewCount", typeof(int));
    
            var weightInTonsParameter = weightInTons.HasValue ?
                new ObjectParameter("WeightInTons", weightInTons) :
                new ObjectParameter("WeightInTons", typeof(int));
    
            var lengthInMetersParameter = lengthInMeters.HasValue ?
                new ObjectParameter("LengthInMeters", lengthInMeters) :
                new ObjectParameter("LengthInMeters", typeof(int));
    
            var beamInMetersParameter = beamInMeters.HasValue ?
                new ObjectParameter("BeamInMeters", beamInMeters) :
                new ObjectParameter("BeamInMeters", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Ships_Update", shipIdParameter, shipNameParameter, yearBuiltParameter, passengerCapactiyParameter, crewCountParameter, weightInTonsParameter, lengthInMetersParameter, beamInMetersParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int Users_Delete(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Users_Delete", userIdParameter);
        }
    
        public virtual ObjectResult<Users_GetByAspId_Result> Users_GetByAspId(string aspUserId)
        {
            var aspUserIdParameter = aspUserId != null ?
                new ObjectParameter("AspUserId", aspUserId) :
                new ObjectParameter("AspUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Users_GetByAspId_Result>("Users_GetByAspId", aspUserIdParameter);
        }
    
        public virtual ObjectResult<Users_GetById_Result> Users_GetById(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Users_GetById_Result>("Users_GetById", userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Users_Insert(string userName, string email, string gender, string city, string description, string profilePhoto, string aspUserId)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var profilePhotoParameter = profilePhoto != null ?
                new ObjectParameter("ProfilePhoto", profilePhoto) :
                new ObjectParameter("ProfilePhoto", typeof(string));
    
            var aspUserIdParameter = aspUserId != null ?
                new ObjectParameter("AspUserId", aspUserId) :
                new ObjectParameter("AspUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Users_Insert", userNameParameter, emailParameter, genderParameter, cityParameter, descriptionParameter, profilePhotoParameter, aspUserIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Users_Update(Nullable<int> userId, string userName, string email, string gender, string city, string description, string profilePhoto)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var profilePhotoParameter = profilePhoto != null ?
                new ObjectParameter("ProfilePhoto", profilePhoto) :
                new ObjectParameter("ProfilePhoto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Users_Update", userIdParameter, userNameParameter, emailParameter, genderParameter, cityParameter, descriptionParameter, profilePhotoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> UsersToCruises_Delete(Nullable<int> usersToCruisesId)
        {
            var usersToCruisesIdParameter = usersToCruisesId.HasValue ?
                new ObjectParameter("UsersToCruisesId", usersToCruisesId) :
                new ObjectParameter("UsersToCruisesId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("UsersToCruises_Delete", usersToCruisesIdParameter);
        }
    
        public virtual ObjectResult<UsersToCruises_GetById_Result> UsersToCruises_GetById(Nullable<int> usersToCruisesId)
        {
            var usersToCruisesIdParameter = usersToCruisesId.HasValue ?
                new ObjectParameter("UsersToCruisesId", usersToCruisesId) :
                new ObjectParameter("UsersToCruisesId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsersToCruises_GetById_Result>("UsersToCruises_GetById", usersToCruisesIdParameter);
        }
    
        public virtual ObjectResult<UsersToCruises_GetUserCruises_Result> UsersToCruises_GetUserCruises(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsersToCruises_GetUserCruises_Result>("UsersToCruises_GetUserCruises", userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> UsersToCruises_InsertUpdate(Nullable<int> usersToCruisesId, Nullable<int> userId, Nullable<int> cruiseId, Nullable<bool> isDeleted)
        {
            var usersToCruisesIdParameter = usersToCruisesId.HasValue ?
                new ObjectParameter("UsersToCruisesId", usersToCruisesId) :
                new ObjectParameter("UsersToCruisesId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var cruiseIdParameter = cruiseId.HasValue ?
                new ObjectParameter("CruiseId", cruiseId) :
                new ObjectParameter("CruiseId", typeof(int));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("UsersToCruises_InsertUpdate", usersToCruisesIdParameter, userIdParameter, cruiseIdParameter, isDeletedParameter);
        }
    }
}
